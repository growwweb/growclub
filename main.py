import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils.executor import start_webhook
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID"))
WEBHOOK_HOST = os.getenv("WEBHOOK_HOST")  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://your-app.onrender.com

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è webhook
WEBHOOK_PATH = f'/webhook/{BOT_TOKEN}'
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# –ü–æ—Ä—Ç (Render —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PORT –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
APP_PORT = int(os.getenv("PORT", 5000))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –®–∞–≥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class Form(StatesGroup):
    name = State()
    contact = State()

@dp.message_handler(commands=["start"])
async def cmd_start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∑–∞–ø–∏—à—É —Ç–µ–±—è –≤ –∫–ª—É–±. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await Form.name.set()

@dp.message_handler(commands=["id"])
async def get_chat_id(message: types.Message):
    await message.answer(f"üÜî –¢–≤–æ–π chat_id: {message.chat.id}")

@dp.message_handler(state=Form.name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.reply("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ Telegram username.")
    await Form.contact.set()

@dp.message_handler(state=Form.contact)
async def process_contact(message: types.Message, state: FSMContext):
    await state.update_data(contact=message.text)
    data = await state.get_data()

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.reply("‚úÖ –¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ –∫–ª—É–±! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π.")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏
    record = (
        f"–î–∞—Ç–∞: {message.date}\n"
        f"–ò–º—è: {data['name']}\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\n"
        f"Username: @{message.from_user.username or '–Ω–µ—Ç'}\n"
        f"User ID: {message.from_user.id}\n"
        "------------------------\n"
    )

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª (–Ω–∞ Render —Ñ–∞–π–ª –±—É–¥–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–º)
    try:
        with open('members.txt', 'a', encoding='utf-8') as file:
            file.write(record)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª: {e}")

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    try:
        text = (
            "üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —á–ª–µ–Ω—Å—Ç–≤–æ –≤ –∫–ª—É–±–µ:\n"
            f"üë§ –ò–º—è: {data['name']}\n"
            f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\n"
            f"üÜî Telegram: @{message.from_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}"
        )
        await bot.send_message(ADMIN_CHAT_ID, text)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")

    await state.finish()

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è webhook
async def on_startup(dp):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    await bot.set_webhook(WEBHOOK_URL)
    logging.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

async def on_shutdown(dp):
    # –£–¥–∞–ª—è–µ–º webhook
    await bot.delete_webhook()
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    await dp.storage.close()
    await dp.storage.wait_closed()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ webhook
    start_webhook(
        dispatcher=dp,
        webhook_path=WEBHOOK_PATH,
        on_startup=on_startup,
        on_shutdown=on_shutdown,
        skip_updates=True,
        host="0.0.0.0",
        port=APP_PORT,
    )
